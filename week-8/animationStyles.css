@keyframes moveRight { 
    from {
    transform: translateX(-50%);
    }
    to {
    transform: translateX(50%);
    }
}

@keyframes appearDisappear { 
    0%, 100% {
    opacity: 0;
    }
    20%, 80% {
    opacity: 1;
    }
}

@keyframes bgMove {
    100% {
    background-position: 120% 0;
    }
}

h2 span {
    font-size: 30px;
    color: #999999;
    display: inline-block;
}

h2:hover span {
    animation-name: appearDisappear;
    animation-duration: 4s;
    /* While animation-name is the only required animation property to create an animation, 
    the animation-duration should be considered required to animate an element. Without 
    declaring the duration it defaults to 0s, which is imperceptible, but still fires 
    the animationstart and animationend events. */
}

h3 {
    animation-name: appearDisappear;
    animation-duration: 4s;
    animation-delay: 50ms;
    animation-iteration-count: infinite;
    /* animation: 300ms ease-in alternate 5s backwards appearDisappear; */
}

h3:hover {
    animation-name: moveRight;
    animation-duration: 4s;
    animation-timing-function: linear;
    animation-direction: alternate;
    /* With the alternate value, the initial iteration and odd-numbered iterations after that 
    will go in the normal 0% to 100% direction, but the second iteration and every even 
    iteration after that will go in the reverse direction of 100% to 0% */
}

h4:hover {
    
}
/* @-webkit-keyframes myAnimation { 
    put animation keyframes here
} */

/* Note that you should not put quotes around the animation name in either the property 
value or the @keyframes at-rule, as the specifications state the name is an identifier
 and not a string, so browsers donâ€™t support quoted animation names. */

 /* To declare multiple animations on an element, include a grouping for each animation name,
with each shorthand grouping separated by a comma. For example: */

.target {
    animation: 
    animationOne 300ms ease-in backwards, 
    animationTwo 600ms ease-out 1s forwards;
}